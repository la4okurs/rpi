Some useful Linux commands/programs/files (first cut, fast typed in here):
==========================================================================
.                       # denotes current directory
..                      # denotes mother directory, the directory above the current directory
bash myprogram          # start a bash prog called 'myprogram' (better call it myprog.sh or .bash)
python myprog           # start a python program called 'myprog' (better call it myprog.py)
mkdir dir1              # example: create a directory called 'dir1' below the current directory
cat myfile              # dump myfile to screen  (dump to std out device = the screen)
man ls | less           # dump the manual to fill the screen only, use arrow up/down to scroll
more myfile             # dump myfile to screen,stop when screen is full. Hint better use 'less' 
head -n 3 myfile        # dump header of myfile        (dump only 3 first lines to screen)
tail -n 3 myfile        # dump tail (footer) of myfile (dump only 3 last  lines  to screen)
cat myfile > file1      # dump myfile to another file called file1 (instead of dump to screen)
cat myfile >> file1     # append even more to file1    ( '>>' means append)
cat myfile >file1 2>&1  # dump to file1 (including error messages), eg. let 2=std err also redirect
mv file1 file2          # move file1 to file2 (file1 will disappear).file1,2 may be directories
diff file1 file2        # list differences between files, file1 and file2
diff -r dir1 dir2       # list differences between directories, -r  means do recursive check
   which vlc            # example: get pathname(s) of the file vlc (which would be executed in the current environment)
find <dir>              # list all files and directories below the directory named <dir>
   find . -type f       # example: list all files below current directory (-type f    means list only files, not directories)
lsusb                   # list USB devices
lsblk                   # list block devices (disks, cd, sd cards etc)
ls -Slhr                # list files, list in size order, biggest files as last file,h=human
ls -lhtr                # list files, list in date order, last modified file as last listed
chmod u+x myfile        # append (upgrade) own access to execute access, u=user, x=excute
   sudo chmod 0755 file # example: change to full own access, read and exec. access for all others
df                      # list mounted devices, report file system disk space usage (show number of bytes)  
   df -h                # example: list mounted devices, report file system disk space usage, h=human,showing in MB and GB
du -sh <dir>            # list disk usage, example:'du -sh .' # list disk usage on curr. directory
sudo umount /media/...  # unmount file system at /device..., example: 'sudo umount /media/pi/0443-B119' # unmount my USB stick
ps -ef                  # list running processes, when it was started, by whom etc
   ps -ef | grep  nginx  # example: check if the nginx program is running
pgrep -f program        # find process ID (mother and child) of a process called 'program'
   pgrep -f nginx       # example: find process ID of the program 'nginx'
kill -9                 # hard kill,ex: 'kill -9 23415' ('sudo kill -9 23415')
kill -9 $(pgrep -f /usr/sbin/nginx) # example: kill all processes involving the /usr/sbin/nginx
whoami                  # which user am I logged in as
file myfile             # which type of file is 'myfile'  (is it a .txt file,a .zip file,ASCII etc)
man ls                  # dump the manual for the 'ls' program
    man ls | less       # example: dump the manual to fill screen, use arrow up/down to scroll
nano, vim, leafpad, emacs # some popular editors

# install/packages etc:
sudo apt-get upgrade       # update the package list
sudo apt-get install pack  # install a package (here called 'pack')
sudo apt-get purge pack    # purge (remove) a package (including conf removal)
apt-cache search myprog    # find package name to the not yet installed bin program myprog
dpkg --get-selections      # list all packages already installed on this host
dpkg -S /usr/bin/vlc       # example: Search to get the package name for the binary program vlc
   dpkg -S $(which ls)     # example: find corresponding package name to the binary ls program
dpkg -L package            # Show files inside an already installed package (here inside the package 'package')
                           # If no package-name is given, list all pacakges already installed on this host
sudo apt-get update        # update the package list
sudo apt-get install <package> # install a package, example: 'sudo apt-get install vlc'
sudo apt-get purge  <package>  # remove a package including conf files

unzip myfile.zip           # inflate a .zip file, eg. "pack out" a zip file
gunzip myfile.tar.gz       # gunzip an archive ( .tar file), the result will be a .tar file
tar xvf myfile.tar         # unpack an archive file (.tar file) to separate files
git clone <git archive)    # download from a git repository
    git clone http://github.com/la4okurs/rpi # example: download from the la4okurs git repo rpi(.git)
wget http://....           # download file(s) from a http (or possibly https site)

# secure shell (login and copy):
ssh pi@81.167.10.72        # ssh login at 81.167.10.74 at port 22 (default port) as user pi
ssh pi@81.167.10.72 -p 30  # ssh login at 81.167.10.74 at port 30 (see /etc/ssh/sshd_config)
scp -P 30 ./srcfile pi@81.167.10.72:/home/pi # secure cp local file ./srcfile to remote machine using it's destination port 30
# more advanced:
ssh -D 9999 paul@51.174.164.13 -p 38 # ssh login at remote port 38 and open a socket to listen at port 9999 specifies a local “Dynamic” application-level port forwarding.

# --- NETWORK CONFIG FILES ---- (valid for Raspbian Stretch >= 29-11-2017):
# For Static IP file example:
$ cat /etc/dhcpcd.conf   # or static LAN IPs
....example: add lines like:....
interface eth0           #  (check with 'ifconfig -a'):
static ip_address=10.0.0.39/24 
static routers=10.0.0.1
static domian_name_servers=8.8.8.8 8.8.4.4   # the dns name servers

# Wi-FI network example format:
$ cat /etc/wpa_supplicant/wpa_supplicant.conf   # Wi-Fi network search file
ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
update_config=1
country=NO
network={
	ssid="4G-Mobile-WiFi-5435"
	psk="tye7867fgt"
	key_mgmt=WPA-PSK
}
network={
        .....
}

