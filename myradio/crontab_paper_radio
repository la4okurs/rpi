# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
#
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').#
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
#
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
#
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
#
# For more information see the manual pages of crontab(5) and cron(8)
#
# m h  dom mon dow   command
# ---------- On reboot, prepare botton radio, start with silence,operate button to get sound -----:
@reboot /usr/bin/amixer cset numid=3 1 >/dev/null 2>&1 # 3 1=analog jack, 3 2=HDMI, 3 0=auto (priority on HDMI if present)
#@reboot /bin/bash $HOME/rpi/myradio/set_volume.bash 45 >/dev/null 2>&1 # %
#@reboot /bin/bash $HOME/rpi/myradio/set_volume.bash 75 >/dev/null 2>&1 # %
@reboot /bin/bash $HOME/rpi/myradio/set_volume.bash 98 >/dev/null 2>&1 # %
@reboot /bin/sleep 10;/bin/bash $HOME/rpi/myradio/bradio.bash >/dev/null 2>&1 &  # press button to get first stream

# ---------- alternative, turn on a radio station - start on specific times , not on reboot ----:
00 8-18  * * * /bin/bash $HOME/rpi/myradio/start_cradio.bash nrk  >/dev/null 2>&1 &  # news ON every hour
#03 8-18 * * * /bin/bash $HOME/rpi/myradio/start_cradio.bash stop >/dev/null 2>&1 &  # news OFF every hour
03 8-22  * * 2-6 /bin/bash $HOME/rpi/myradio/start_cradio.bash ham  >/dev/null 2>&1 &  # EXTRA LINE; TAKE OUT TBD
48 8-22  * * 2-6 /bin/bash $HOME/rpi/myradio/start_cradio.bash ham  >/dev/null 2>&1 &  # EXTRA LINE, in case of timeout
30 22    * * * /bin/bash $HOME/rpi/myradio/start_cradio.bash stop >/dev/null 2>&1 &  # Silence during night
45 22    * * * /bin/bash $HOME/rpi/myradio/start_cradio.bash stop >/dev/null 2>&1 &  # Silence during night, once more
00 0-7   * * * /bin/bash $HOME/rpi/myradio/start_cradio.bash stop >/dev/null 2>&1 &  # Silence during night, once more

# ---------- alternative, turn on a radio station, QST etc  - on specific days 0=Sunday, 1=Monday etc-----:
00 20 * * 0 /bin/bash $HOME/rpi/myradio/start_cradio.bash ham  >/dev/null 2>&1 &  # Start QST Mjï¿½sa at Sunday,listen ham
30 20 * * 0 /bin/bash $HOME/rpi/myradio/start_cradio.bash stop >/dev/null 2>&1 &  # Stop
00 21 * * 0 /bin/bash $HOME/rpi/myradio/start_cradio.bash ham  >/dev/null 2>&1 &  # Start QST Drammen at Sunday,listen ham
30 21 * * 0 /bin/bash $HOME/rpi/myradio/start_cradio.bash stop >/dev/null 2>&1 &  # Stop
00 20 * * 1 /bin/bash $HOME/rpi/myradio/start_cradio.bash ham  >/dev/null 2>&1 &  # Start QST Follo on Monday
30 20 * * 1 /bin/bash $HOME/rpi/myradio/start_cradio.bash stop >/dev/null 2>&1 &  # Stop
30 21 * * 1 /bin/bash $HOME/rpi/myradio/start_cradio.bash ham  >/dev/null 2>&1 &  # Start QST Oslo on Monday, listen ham
20 22 * * 1 /bin/bash $HOME/rpi/myradio/start_cradio.bash stop >/dev/null 2>&1 &  # Stop

# ---------- talking clock ----------
58 7 * * * /bin/bash $HOME/rpi/talking_clock/talkingclock.bash "Good morning. This is your Raspberry Pi! I am prepared for a new day." >/dev/null 2>&1
59 7-18 * * * /bin/bash $HOME/rpi/talking_clock/talkingclock.bash " This is your Raspberry Pi ! In a minute! there will be the latest breaking news" >/dev/null 2>&1
